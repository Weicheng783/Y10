{"remainingRequest":"/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/home/csimage/Desktop/group_repo/cultime_frontend/src/views/WatchList.vue?vue&type=template&id=d4fa3a7a&","dependencies":[{"path":"/home/csimage/Desktop/group_repo/cultime_frontend/src/views/WatchList.vue","mtime":1615637777170},{"path":"/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/csimage/Desktop/group_repo/cultime_frontend/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}